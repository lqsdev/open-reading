<?php
    $this->css($this->assetModule('script/article-front-admin.css'));
    $this->jQuery('extension/fileupload-min.js');
    $this->Backbone();
    $this->bootstrap('js/bootstrap.min.js');
?>
<h2 class="page-header"><?php echo $this->escape($title) ?></h2>

<?php include 'message-box.phtml' ?>

<div id="jsUpload">
    <?php include $this->templateComponent('form'); ?>
    
    <script id="temp-upload" type="text/template">
        <div>
            <div id="topic-image" class="upload-image-bg">
                <?php $src = $form->get('image')->getValue() ?>
                <?php if ($src) { ?>
                    <div class="black-bg"><i class="topic icon-remove"></i></div>    
                    <img src="<?php echo Pi::url($src) ?>">
                    <?php } else { ?>    
                    <i class="icon-columns"></i>
                <?php } ?>
            </div>
            <button class="btn upload fileinput-button" data-toggle="modal" href="#upload-box">
                <?php _e('Upload') ?>
            </button>
        </div>
    </script>
    
    <?php include 'media-image-box.phtml' ?>
</div>

<script>
(function($) {
var page = {
    id      : function() {
        return "<?php echo $form->get('id')->getValue() 
            ? 'id-' . $form->get('id')->getValue() 
            : 'fake_id-' . $form->get('fake_id')->getValue(); ?>";
    },
    form    : $("form.form-horizontal"),
    $       : function(selector) {
       return this.form.find(selector);
    },
    mediaFakeId : '<?php echo uniqid() ?>'
};

var UploadView = Backbone.View.extend({
    template        : _.template('<div class="black-bg"><i class="topic icon-remove"></i></div>'
                    + '<img src="<%=preview_url %>">'),
    events          : {
        "click .topic.icon-remove"  :"remove",
        "click .media.icon-remove"  : "removeUpload",
        "click #media-search"       : "searchMedia",
        "click .media-insert"       : "insertMedia",
        "click .media-remove.close" : "removeMedia",
        "click #media-close"        : "cancel",
        "click #media-cancel"       : "cancel",
        "click #media-process"      : "processImage"
    },
    initialize      : function() {
        page.$("[name=placeholder]")
            .parents(".control-group:first")
            .find(".controls")
            .html($("#temp-upload").html());
        this.$el   = $("#jsUpload");
        this.input = $('input[name="upload"]');
        this.fileupload();
    },
    // Fetching image by upload
    fileupload      : function() {
        var self = this;
        var url  = '<?php echo $this->url('', array(
            'controller' => 'media',
            'action'     => 'upload',
            'type'       => 'image',
        )); ?>/fake_id-' + page.mediaFakeId;
        this.input.fileupload({
            formData    : function() {
                return [];
            },
            url         : url,
            done        : function(e, data) {
                var d = $.parseJSON(data.result);
                if (d.status == 1) {
                    self.renderUpload(d.data);
                    // Clear hidden input value and select image of media
                    self.setMediaData('fake_id-' + page.mediaFakeId, 'upload');
                    $('#media-select-result').html('');
                } else {
                    alert(d.message);
                }
            }
        }).bind('fileuploadsend', function(e, data) {
            data.url = '<?php echo $this->url('', array(
                'controller' => 'media',
                'action'     => 'upload',
                'type'       => 'image',
            )); ?>/fake_id-' + page.mediaFakeId;
        });  
    },
    removeUpload    : function(clearData) {
        // Setting initial value of parameter
        if (clearData != false) {
            clearData = true;
        }
        
        var self = this;
        $.getJSON('<?php echo $this->url(
            '',
            array(
                'controller' => 'media',
                'action'     => 'remove'
            )
        ); ?>fake_id-'+ page.mediaFakeId).done(function() {
            $("#media-image").html('');
            if (clearData == true) {
                self.clearMediaData();
            }
        });
    },
    renderUpload    : function(obj) {
        obj.preview_url = obj.preview_url + '?' + new Date().getTime();
        $('#media-image').html(_.template($('#media-uploaded-image').html(), obj));
    },
    saveUploadToMedia : function(id) {
        var url = '<?php echo $this->url('', array(
            'controller' => 'media',
            'action'     => 'save',
            'source'     => 'topic',
        )) ?>/' + id;
        var self = this;
        $.ajax({
            cache:    false,
            async:    false,
            dataType: 'json',
            type:     'get',
            url:      url,
            success:  function(result) {
                if (result.status) {
                    $("#media-image").html(page.mediaDefaultTemplate);
                    self.renderMessage('success', result.data.message);
                    self.setMediaData('media_id-' + result.data.id, 'media');
                    page.mediaFakeId = result.data.newid;
                } else {
                    self.renderMessage('error', result.data.message);
                }
            },
            error:    function() {
                self.renderMessage(
                    'error',
                    '<?php _e('Error ocurred when request saving image!') ?>'
                );
            }
        })
    },
    // Processing topic image
    saveTopic        : function() {
        var self    = this;
        var mediaId = $('input[name="image-id"]').val();
        $.get('<?php echo $this->url(
            '',
            array(
                'controller' => 'topic',
                'action'     => 'save-image',
            )
        ); ?>' + page.id() + '/' + mediaId, function(result) {
            result = $.parseJSON(result);
            if (result.status) {
                page.$("[name=image]").val(result.data.filename);
                self.render(result.data);
                // Remove all generated data
                self.removeMedia();
                $("#media-image").html(page.mediaDefaultTemplate);
            } else {
                alert(result.message);
            }
        });
    },
    remove          : function() {
        var self = this;
        $.getJSON('<?php echo $this->url(
            '',
            array(
                'controller' => 'topic',
                'action'     => 'remove-image'
            )
        ); ?>' + page.id()).done(function() {
            page.$("[name=image]").val('');
            self.$("#topic-image").html('<i class="icon-columns"></i>');
        });  
    },
    render          : function(obj) {
        obj.preview_url = obj.preview_url + '?' + new Date().getTime();
        this.$("#topic-image").html(this.template(obj));
    },
    // Fetching image from media
    searchMedia     : function() {
        var title = $('input[name="media-title"]').val();
        $.get('<?php echo $this->url(
            '',
            array(
                'controller' => 'media',
                'action'     => 'search',
                'type'       => 'image',
            )
        ); ?>/' + 'title-' + title, function(result) {
            var lists = $.parseJSON(result);
            for (i in lists) {
                $('#media-lists')
                .find('tbody')
                .append(_.template($('#media-searched-item').html(), lists[i]));
            }
        });
    },
    insertMedia : function(e) {
        var id    = $(e.target).attr('data-id');
        var url   = $(e.target).attr('data-url');
        var title = $(e.target).attr('data-title');
        var content = _.template($('#media-selected-item').html(), {
            url     : url,
            title   : title
        });
        // Clearing data from upload
        this.removeUpload(false);
        
        // Setting data
        $('#media-select-result').html(content);
        this.setMediaData('media_id-' + id, 'media');
    },
    removeMedia : function() {
        $('#media-select-result').html('');
        this.clearMediaData();
    },
    clearMediaData : function() {
        $('input[name="image-id"]').val('');
        $('input[name="image-source"]').val('');
    },
    setMediaData : function(value, source) {
        $('input[name="image-id"]').val(value);
        $('input[name="image-source"]').val(source);
    },
    // Processing data from uploading and media
    cancel : function() {
        var source = $('input[name="image-source"]').val();
        
        if ('upload' == source) {
            this.removeUpload();
        } else if ('media' == source) {
            this.removeMedia();
        }
    },
    processImage : function() {
        var self   = this;
        var source = $('input[name="image-source"]').val();
        var id     = $('input[name="image-id"]').val();
        
        if (source.length && id.length) {
            // Saving uploaded image into media section
            if ('upload' == source) {
                self.saveUploadToMedia(id);
            }

            // Creating temporary image for topic
            self.saveTopic();
        }
    },
    renderMessage : function(status, message) {
        $('#message-box').html(
            _.template($('#template-message').html(), {
                status      : status,
                message     : message
            })
        );
    }
});
new UploadView;
})(jQuery)
</script>
